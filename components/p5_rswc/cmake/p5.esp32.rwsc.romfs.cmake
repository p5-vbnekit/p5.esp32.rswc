cmake_minimum_required(VERSION 3.4)

unset("_cmake_module_namespace" CACHE)
mark_as_advanced("_cmake_module_namespace")
get_filename_component("_cmake_module_namespace" "${CMAKE_CURRENT_LIST_FILE}" NAME_WLE)

function("${_cmake_module_namespace}::_initialize")
    unset("_python" CACHE)
    unset("_base_path" CACHE)
    unset("_script_base_name" CACHE)
    unset("_image_layout_path" CACHE)
    unset("_image_layout_target" CACHE)
    unset("_image_manifest_path" CACHE)
    mark_as_advanced("_python")
    mark_as_advanced("_base_path")
    mark_as_advanced("_script_base_name")
    mark_as_advanced("_image_layout_path")
    mark_as_advanced("_image_layout_target")
    mark_as_advanced("_image_manifest_path")
    get_filename_component("_base_path" "${CMAKE_CURRENT_FUNCTION_LIST_DIR}" DIRECTORY)
    get_filename_component("_script_base_name" "${CMAKE_CURRENT_FUNCTION_LIST_FILE}" NAME_WLE)
    if("${_base_path}" STREQUAL "${CMAKE_CURRENT_SOURCE_DIR}")
        idf_build_get_property("_python" PYTHON)
        if("${_python}" STREQUAL "")
            message(FATAL_ERROR "failed to determine python interpreter")
        endif()
        set("_image_layout_path" "${CMAKE_CURRENT_BINARY_DIR}/.local/${_script_base_name}.image.layout.S")
        set("_image_manifest_path" "${CMAKE_CURRENT_BINARY_DIR}/.local/${_script_base_name}.image.manifest")
        set_property(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}" PROPERTY "${_script_base_name}::image.layout.path" "${_image_layout_path}")
        set_property(DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}" PROPERTY "${_script_base_name}::image.manifest.path" "${_image_manifest_path}")
        file(WRITE "${_image_manifest_path}" "")
        add_custom_command(
            VERBATIM OUTPUT "${_image_layout_path}"
            MAIN_DEPENDENCY "${CMAKE_CURRENT_SOURCE_DIR}/scripts/make_image_layout.py"
            COMMAND "${_python}" ARGS "${CMAKE_CURRENT_SOURCE_DIR}/scripts/make_image_layout.py" "${_image_manifest_path}" "${_image_layout_path}"
        )
        get_filename_component("_target_name" "${_base_path}" NAME)
        set("_target_name" "${_target_name}.romfs_image_layout")
        add_library("${_target_name}" STATIC "${_image_layout_path}")
    endif()
endfunction()

cmake_language(CALL "${_cmake_module_namespace}::_initialize")

cmake_language(EVAL CODE "function(\"${_cmake_module_namespace}::_initialize\")
    message(FATAL_ERROR \"unexpected call of ${_cmake_module_namespace}::_initialize\")
endfunction()")

function("${_cmake_module_namespace}::add" _destination_path _source_path)
    unset("_line" CACHE)
    unset("_python" CACHE)
    unset("_base_path" CACHE)
    unset("_script_base_name" CACHE)
    unset("_image_layout_path" CACHE)
    unset("_image_manifest_path" CACHE)
    unset("_absolute_source_path" CACHE)
    mark_as_advanced("_line")
    mark_as_advanced("_python")
    mark_as_advanced("_base_path")
    mark_as_advanced("_script_base_name")
    mark_as_advanced("_image_layout_path")
    mark_as_advanced("_image_manifest_path")
    mark_as_advanced("_absolute_source_path")
    set("_line" "")
    idf_build_get_property("_python" PYTHON)
    if("${_python}" STREQUAL "")
        message(FATAL_ERROR "failed to determine python interpreter")
    endif()
    get_filename_component("_base_path" "${CMAKE_CURRENT_FUNCTION_LIST_DIR}" DIRECTORY)
    get_filename_component("_script_base_name" "${CMAKE_CURRENT_FUNCTION_LIST_FILE}" NAME_WLE)
    get_property("_image_layout_path" DIRECTORY "${_base_path}" PROPERTY "${_script_base_name}::image.layout.path")
    if("${_image_layout_path}" STREQUAL "")
        message(FATAL_ERROR "failed to determine image layout file path")
    endif()
    get_property("_image_manifest_path" DIRECTORY "${_base_path}" PROPERTY "${_script_base_name}::image.manifest.path")
    if("${_image_manifest_path}" STREQUAL "")
        message(FATAL_ERROR "failed to determine image manifest file path")
    endif()
    idf_build_get_property("_python" PYTHON)
    get_filename_component("_absolute_source_path" "${_source_path}" ABSOLUTE BASE_DIR "${CMAKE_CURRENT_SOURCE_DIR}")
    execute_process(
        COMMAND "${_python}" "${_base_path}/scripts/make_image_manifest_line.py" "${_destination_path}" "${_absolute_source_path}"
        OUTPUT_VARIABLE "_line" OUTPUT_STRIP_TRAILING_WHITESPACE COMMAND_ERROR_IS_FATAL LAST
    )
    file(APPEND "${_image_manifest_path}" "${_line}\n")
    cmake_language(EVAL CODE "cmake_language(DEFER DIRECTORY \"${_base_path}\"
        CALL \"add_custom_command\" \"APPEND\" \"OUTPUT\" \"${_image_layout_path}\" \"DEPENDS\" \"${_absolute_source_path}\"
    )")
endfunction()
