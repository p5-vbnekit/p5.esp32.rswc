cmake_minimum_required(VERSION 3.0)

unset("_cmake_module_namespace" CACHE)
mark_as_advanced("_cmake_module_namespace")
get_filename_component("_cmake_module_namespace" "${CMAKE_CURRENT_LIST_FILE}" NAME_WLE)

function("${_cmake_module_namespace}::_initialize")
    unset("_suffix" CACHE)
    unset("_prefix" CACHE)
    unset("_base_path" CACHE)
    unset("_script_base_name" CACHE)
    mark_as_advanced("_suffix")
    mark_as_advanced("_prefix")
    mark_as_advanced("_base_path")
    mark_as_advanced("_script_base_name")
    get_filename_component("_base_path" "${CMAKE_CURRENT_FUNCTION_LIST_DIR}" DIRECTORY)
    get_filename_component("_script_base_name" "${CMAKE_CURRENT_FUNCTION_LIST_FILE}" NAME_WLE)
    if("${_base_path}" STREQUAL "${CMAKE_CURRENT_SOURCE_DIR}")
        set("_prefix" "")
    else()
        get_property("_prefix" DIRECTORY ".." PROPERTY "${_script_base_name}::name")
        if("${_prefix}" STREQUAL "")
            message(FATAL_ERROR "expected parent namespace")
        endif()
        set("_prefix" "${_prefix}.")
    endif()
    get_filename_component("_suffix" "${CMAKE_CURRENT_SOURCE_DIR}" NAME)
    set_property(DIRECTORY "." PROPERTY "${_script_base_name}::name" "${_prefix}${_suffix}")
endfunction()

cmake_language(CALL "${_cmake_module_namespace}::_initialize")

cmake_language(EVAL CODE "function(\"${_cmake_module_namespace}::_initialize\")
    message(FATAL_ERROR \"unexpected call of ${_cmake_module_namespace}::_initialize\")
endfunction()")
